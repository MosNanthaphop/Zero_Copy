[แนะนำตัว]

"สวัสดีครับวันนี้พวกเราจะมานำเสนอโปรเจกต์แอพพลิเคชันแปลงสกุลเงิน ซึ่งเป็นส่วนหนึ่งของการศึกษาด้านการพัฒนาแอพพลิเคชันด้วย Flutter"

1. Technical Implementation (50%)

"แอพพลิเคชันแปลงค่าเงินนี้ออกแบบมาเพื่อช่วยผู้ใช้แปลงสกุลเงินจากสกุลเงินต้นทางไปยังปลายทาง โดยดึงอัตราแลกเปลี่ยนแบบเรียลไทม์จาก ExchangeRate-API ครับ/ค่ะ ซึ่งการแปลงนี้สามารถบันทึกประวัติได้ และผู้ใช้ยังสามารถจัดการประวัติการแปลงหรือเลือกสกุลเงินเริ่มต้นได้จากหน้า Settings

โครงสร้างของโค้ดประกอบไปด้วยไฟล์หลัก 3 ไฟล์:

main.dart: จัดการการตั้งค่าพื้นฐานของแอป เช่น ค่าเริ่มต้นของสกุลเงิน การเชื่อมต่อกับ API และแสดงหน้าหลักสำหรับการแปลงค่าเงิน
history.dart: จัดการการแสดงผลประวัติการแปลงในรูปแบบ ListView โดยผู้ใช้สามารถลบหรือเคลียร์ประวัติการแปลงได้
setting.dart: จัดการการตั้งค่าสกุลเงินเริ่มต้นผ่าน SharedPreferences ทำให้การใช้งานครั้งถัดไปเป็นไปอย่างสะดวก
ด้านการทำงานของระบบ แอปใช้การนำทางผ่าน Navigator และการจัดการสถานะด้วย setState() รวมถึงการเชื่อมต่อกับ ExchangeRate-API เพื่อดึงข้อมูลอัตราแลกเปลี่ยนในรูปแบบเรียลไทม์"

2. Functionality and User Experience (20%)

"ในส่วนของการใช้งาน แอปนี้ออกแบบมาให้ใช้งานง่ายและสะดวกรวดเร็ว:

ในหน้าแรก ผู้ใช้สามารถเลือกสกุลเงินต้นทางและปลายทาง ใส่จำนวนเงินที่ต้องการแปลง และกดปุ่ม 'Convert' ผลลัพธ์จะแสดงทันที
ในหน้าประวัติการแปลง ผู้ใช้สามารถดูประวัติการแปลงที่ผ่านมา พร้อมทั้งลบรายการหรือเคลียร์ทั้งหมดได้
ส่วนของหน้า Settings ผู้ใช้สามารถตั้งค่าสกุลเงินเริ่มต้นสำหรับการแปลงเงินในครั้งถัดไปได้
ในการออกแบบ UI แอปนี้เน้นความเรียบง่ายและชัดเจน ทำให้ผู้ใช้เข้าใจการทำงานได้ทันทีโดยใช้ Dropdown เพื่อเลือกสกุลเงินและ Card widgets เพื่อแยกข้อมูลเป็นหมวดหมู่"

3. Creativity and Innovation (15%)

"ความคิดสร้างสรรค์ของแอปนี้อยู่ที่การเลือกสกุลเงินเริ่มต้นในหน้า Settings และการบันทึกประวัติการแปลง ซึ่งช่วยให้ผู้ใช้สามารถจัดการกับข้อมูลได้อย่างรวดเร็วและสะดวก นอกจากนี้ แอปยังมีการใช้ SnackBar เพื่อแจ้งเตือนสถานะการบันทึกการตั้งค่าโดยไม่รบกวนการใช้งานของผู้ใช้

การออกแบบเชิงสร้างสรรค์ของแอปยังรวมถึงการใช้ภาพพื้นหลังที่สวยงาม และการจัดข้อมูลผ่าน Card widgets เพื่อให้หน้าตาแอปดูสวยงามและเป็นระเบียบ"

4. Testing Methods (10%)

"สุดท้ายนี้ การทดสอบแอปถูกแบ่งเป็น 2 ส่วนหลักคือ Unit Testing และ Widget Testing:

Unit Testing ใช้สำหรับตรวจสอบฟังก์ชันหลัก เช่น การตรวจสอบว่าจำนวนเงินที่กรอกถูกต้องหรือไม่
Widget Testing ใช้เพื่อทดสอบการแสดงผลของ UI และตรวจสอบการทำงานของหน้าแอป เช่น ทดสอบปุ่ม 'History' เพื่อนำผู้ใช้ไปยังหน้าประวัติการแปลง
ตัวอย่างเช่น การทดสอบการแสดงผลหน้าหลักและทดสอบการบันทึกการตั้งค่าสกุลเงินในหน้า Settings ทำให้มั่นใจได้ว่าแอปทำงานได้ตามที่คาดหวังครับ/ค่ะ"

[สรุป]

"สรุปแล้ว โปรเจกต์แอพพลิเคชันแปลงสกุลเงินนี้เน้นการพัฒนาด้านเทคนิค การออกแบบ UX/UI และการทดสอบเพื่อให้แอปใช้งานได้ง่ายและลื่นไหล หวังว่าการนำเสนอนี้จะทำให้เห็นถึงการทำงานและความคิดสร้างสรรค์ในโปรเจกต์ของผม/ดิฉัน ขอบคุณครับ/ค่ะ"






